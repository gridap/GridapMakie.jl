var documenterSearchIndex = {"docs":
[{"location":"#GridapMakie","page":"Home","title":"GridapMakie","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The documentation of this package is under construction. For further information read the README.md file.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#GridapMakie.MeshField","page":"Home","title":"GridapMakie.MeshField","text":"MeshField is the plot type associated with plotting function meshfield. Check the docstring for meshfield for further information.\n\n\n\n\n\n","category":"type"},{"location":"#GridapMakie.meshfield","page":"Home","title":"GridapMakie.meshfield","text":"No docstring defined.\n\nPlot type\n\nThe plot type alias for the meshfield function is MeshField.\n\nAttributes\n\nalpha =  1.0  — The alpha value of the colormap or color attribute. Multiple alphas like in plot(alpha=0.2, color=(:red, 0.5), will get multiplied.\n\nbacklight =  0.0  — Sets a weight for secondary light calculation with inverted normals.\n\nclip_planes =  @inherit clip_planes automatic  — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 Plane3f planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent clip_planes by passing Plane3f[].\n\ncolor =  :pink  — No docs available.\n\ncolormap =  :bluesreds  — Sets the colormap that is sampled for numeric colors. PlotUtils.cgrad(...), Makie.Reverse(any_colormap) can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call Makie.available_gradients().\n\ncolorrange =  automatic  — The values representing the start and end points of colormap.\n\ncolorscale =  identity  — The color transform function. Can be any function, but only works well together with Colorbar for identity, log, log2, log10, sqrt, logit, Makie.pseudolog10 and Makie.Symlog10.\n\ncycle =  nothing  — No docs available.\n\ndepth_shift =  0.0  — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where -1 <= depth <= 1. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).\n\ndepthsorting =  false  — No docs available.\n\ndiffuse =  1.0  — Sets how strongly the red, green and blue channel react to diffuse (scattered) light.\n\ndistancefield =  nothing  — No docs available.\n\nfont =  \"default\"  — No docs available.\n\nfxaa =  false  — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).\n\nglowcolor =  (:black, 0.0)  — No docs available.\n\nglowwidth =  0.0  — No docs available.\n\nhighclip =  automatic  — The color for any value above the colorrange.\n\ninspectable =  @inherit inspectable  — Sets whether this plot should be seen by DataInspector. The default depends on the theme of the parent scene.\n\ninspector_clear =  automatic  — Sets a callback function (inspector, plot) -> ... for cleaning up custom indicators in DataInspector.\n\ninspector_hover =  automatic  — Sets a callback function (inspector, plot, index) -> ... which replaces the default show_data methods.\n\ninspector_label =  automatic  — Sets a callback function (plot, index, position) -> string which replaces the default label generated by DataInspector.\n\ninterpolate =  true  — No docs available.\n\njoinstyle =  @inherit joinstyle  — No docs available.\n\nlinecap =  @inherit linecap  — No docs available.\n\nlinestyle =  nothing  — No docs available.\n\nlinewidth =  @inherit linewidth  — No docs available.\n\nlowclip =  automatic  — The color for any value below the colorrange.\n\nmarker =  @inherit marker  — No docs available.\n\nmarker_offset =  Makie.Vec3f(0)  — No docs available.\n\nmarkersize =  @inherit markersize  — No docs available.\n\nmarkerspace =  :pixel  — No docs available.\n\nmatcap =  nothing  — No docs available.\n\nmaterial =  nothing  — RPRMakie only attribute to set complex RadeonProRender materials.         Warning, how to set an RPR material may change and other backends will ignore this attribute\n\nmiter_limit =  @inherit miter_limit  — No docs available.\n\nmodel =  automatic  — Sets a model matrix for the plot. This overrides adjustments made with translate!, rotate! and scale!.\n\nnan_color =  :transparent  — The color for NaN values.\n\noverdraw =  false  — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends\n\nrotation =  Makie.Billboard()  — No docs available.\n\nshading =  Makie.NoShading  — Controls if the plot object is shaded by the parent scenes lights or not. The lighting algorithm used is controlled by the scenes shading attribute.\n\nshininess =  32.0  — Sets how sharp the reflection is.\n\nspace =  :data  — Sets the transformation space for box encompassing the plot. See Makie.spaces() for possible inputs.\n\nspecular =  0.2  — Sets how strongly the object reflects light in the red, green and blue channels.\n\nssao =  false  — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with fxaa = true.\n\nstrokecolor =  @inherit markerstrokecolor  — No docs available.\n\nstrokewidth =  @inherit markerstrokewidth  — No docs available.\n\ntransformation =  :automatic  — No docs available.\n\ntransparency =  false  — Adjusts how the plot deals with transparency. In GLMakie transparency = true results in using Order Independent Transparency.\n\nuv_offset_width =  (0.0, 0.0, 0.0, 0.0)  — No docs available.\n\nuv_transform =  Makie.automatic  — No docs available.\n\nvisible =  true  — Controls whether the plot will be rendered or not.\n\n\n\n\n\n","category":"function"},{"location":"#GridapMakie.meshfield!","page":"Home","title":"GridapMakie.meshfield!","text":"meshfield! is the mutating variant of plotting function meshfield. Check the docstring for meshfield for further information.\n\n\n\n\n\n","category":"function"}]
}
